name: Automatic tests (STAGING)

permissions: read-all

on:
  push:
    branches: [staging]

jobs:
  # Build Docker images
  build-containers:
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image: [bunkerweb, scheduler, autoconf, ui]
        include:
          - image: bunkerweb
            dockerfile: src/bw/Dockerfile
          - image: scheduler
            dockerfile: src/scheduler/Dockerfile
          - image: autoconf
            dockerfile: src/autoconf/Dockerfile
          - image: ui
            dockerfile: src/ui/Dockerfile
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: testing
      ARCH: linux/amd64
      CACHE: true
      PUSH: true
      IMAGE: ${{ matrix.image }}
      DOCKERFILE: ${{ matrix.dockerfile }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  # Build Linux packages
  build-packages:
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        linux: [ubuntu, debian, fedora, rhel]
        include:
          - linux: ubuntu
            package: deb
          - linux: debian
            package: deb
          - linux: fedora
            package: rpm
          - linux: rhel
            package: rpm
    uses: ./.github/workflows/linux-build.yml
    with:
      RELEASE: testing
      LINUX: ${{ matrix.linux }}
      PACKAGE: ${{ matrix.package }}
      TEST: true
      PLATFORMS: linux/amd64
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  # Code security
  code-security:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["python"]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Initialize CodeQL
        uses: github/codeql-action/init@ddccb873888234080b77e9bc2d4764d5ccaaccf9 # v2.21.9
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql.yml
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@ddccb873888234080b77e9bc2d4764d5ccaaccf9 # v2.21.9
        with:
          category: "/language:${{matrix.language}}"

  # Create infrastructures
  create-infras:
    needs: [code-security, build-containers, build-packages]
    strategy:
      matrix:
        type: [docker, autoconf, swarm, k8s, linux]
    uses: ./.github/workflows/staging-create-infra.yml
    with:
      TYPE: ${{ matrix.type }}
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      K8S_IP: ${{ secrets.K8S_IP }}

  # Perform tests
  staging-tests:
    needs: [create-infras]
    strategy:
      matrix:
        type: [docker, autoconf, swarm, k8s, linux]
        include:
          - type: docker
            runs_on: "['self-hosted', 'bw-docker']"
          - type: autoconf
            runs_on: "['self-hosted', 'bw-autoconf']"
          - type: swarm
            runs_on: "['self-hosted', 'bw-swarm']"
          - type: k8s
            runs_on: "['ubuntu-latest']"
          - type: linux
            runs_on: "['self-hosted', 'bw-linux']"
    uses: ./.github/workflows/staging-tests.yml
    with:
      TYPE: ${{ matrix.type }}
      RUNS_ON: ${{ matrix.runs_on }}
    secrets: inherit
  tests-ui:
    needs: [create-infras]
    uses: ./.github/workflows/tests-ui.yml
    with:
      RELEASE: testing
  prepare-tests-core:
    needs: [create-infras]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - id: set-matrix
        run: |
          tests=$(find ./tests/core/ -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | jq -c --raw-input --slurp 'split("\n")| .[0:-1]')
          echo "::set-output name=tests::$tests"
    outputs:
      tests: ${{ steps.set-matrix.outputs.tests }}
  tests-core:
    needs: prepare-tests-core
    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJson(needs.prepare-tests-core.outputs.tests) }}
    uses: ./.github/workflows/test-core.yml
    with:
      TEST: ${{ matrix.test }}
      RELEASE: testing

  # Delete infrastructures
  delete-infras:
    if: ${{ always() }}
    needs: [staging-tests]
    strategy:
      matrix:
        type: [docker, autoconf, swarm, k8s, linux]
    uses: ./.github/workflows/staging-delete-infra.yml
    with:
      TYPE: ${{ matrix.type }}
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

  # Push Docker images
  push-images:
    needs: [staging-tests, tests-ui, tests-core]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          egress-policy: audit

      - name: Login to Docker Hub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Login to ghcr
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push BW image
        run: docker pull ghcr.io/bunkerity/bunkerweb-tests:testing && docker tag ghcr.io/bunkerity/bunkerweb-tests:testing bunkerity/bunkerweb:testing && docker push bunkerity/bunkerweb:testing && docker tag bunkerity/bunkerweb:testing ghcr.io/bunkerity/bunkerweb:testing && docker push ghcr.io/bunkerity/bunkerweb:testing
      - name: Push scheduler image
        run: docker pull ghcr.io/bunkerity/scheduler-tests:testing && docker tag ghcr.io/bunkerity/scheduler-tests:testing bunkerity/bunkerweb-scheduler:testing && docker push bunkerity/bunkerweb-scheduler:testing && docker tag bunkerity/bunkerweb-scheduler:testing ghcr.io/bunkerity/bunkerweb-scheduler:testing && docker push ghcr.io/bunkerity/bunkerweb-scheduler:testing
      - name: Push UI image
        run: docker pull ghcr.io/bunkerity/ui-tests:testing && docker tag ghcr.io/bunkerity/ui-tests:testing bunkerity/bunkerweb-ui:testing && docker push bunkerity/bunkerweb-ui:testing && docker tag bunkerity/bunkerweb-ui:testing ghcr.io/bunkerity/bunkerweb-ui:testing && docker push ghcr.io/bunkerity/bunkerweb-ui:testing
      - name: Push autoconf image
        run: docker pull ghcr.io/bunkerity/autoconf-tests:testing && docker tag ghcr.io/bunkerity/autoconf-tests:testing bunkerity/bunkerweb-autoconf:testing && docker push bunkerity/bunkerweb-autoconf:testing && docker tag bunkerity/bunkerweb-autoconf:testing ghcr.io/bunkerity/bunkerweb-autoconf:testing && docker push ghcr.io/bunkerity/bunkerweb-autoconf:testing

  # Push Linux packages
  push-packages:
    needs: [staging-tests, tests-ui, tests-core]
    strategy:
      matrix:
        linux: [ubuntu, debian, fedora, el]
        arch: [amd64]
        include:
          - release: testing
            repo: bunkerweb
          - linux: ubuntu
            separator: _
            suffix: ""
            version: jammy
            package: deb
          - linux: debian
            separator: _
            suffix: ""
            version: bullseye
            package: deb
          - linux: fedora
            separator: "-"
            suffix: "1."
            version: 38
            package: rpm
          - linux: el
            separator: "-"
            suffix: "1."
            version: 8
            package: rpm
          - linux: ubuntu
            arch: amd64
            package_arch: amd64
          - linux: debian
            arch: amd64
            package_arch: amd64
          - linux: fedora
            arch: amd64
            package_arch: x86_64
          - linux: el
            arch: amd64
            package_arch: x86_64
    uses: ./.github/workflows/push-packagecloud.yml
    with:
      SEPARATOR: ${{ matrix.separator }}
      SUFFIX: ${{ matrix.suffix }}
      REPO: ${{ matrix.repo }}
      LINUX: ${{ matrix.linux }}
      VERSION: ${{ matrix.version }}
      PACKAGE: ${{ matrix.package }}
      BW_VERSION: ${{ matrix.release }}
      PACKAGE_ARCH: ${{ matrix.package_arch }}
      ARCH: ${{ matrix.arch }}
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

  # Push doc
  push-doc:
    needs: [push-images, push-packages]
    permissions:
      contents: write
    uses: ./.github/workflows/push-doc.yml
    with:
      VERSION: testing
      ALIAS: unstable
    secrets:
      BUNKERBOT_TOKEN: ${{ secrets.BUNKERBOT_TOKEN }}

  # Push on GH
  push-gh:
    needs: [push-doc]
    permissions:
      contents: write
      discussions: write
    uses: ./.github/workflows/push-github.yml
    with:
      VERSION: testing
      PRERELEASE: true
